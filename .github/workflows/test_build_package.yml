name: "Test, build and package"

on:
  workflow_dispatch:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"

jobs:
  backend_tests:
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2"

      - name: "Setup Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: 3.9

      - name: "Lint and test backend"
        run: "make lint-backend test-backend"

  frontend_tests:
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2"

      - name: "Setup Node"
        uses: "actions/setup-node@v2"
        with:
          node-version: 16
          cache: "yarn"
          cache-dependency-path: "frontend/yarn.lock"

      - name: "Lint and test frontend"
        run: "make lint-frontend test-frontend"

  e2e_tests:
    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2"

      - name: "Setup Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: 3.9

      - name: "Setup Node"
        uses: "actions/setup-node@v2"
        with:
          node-version: 16
          cache: "yarn"
          cache-dependency-path: "frontend/yarn.lock"

      - name: "Run tests"
        run: "make test-e2e"

      - name: "Upload test results"
        uses: "actions/upload-artifact@v2"
        if: failure()
        with:
          name: "e2e-results-${{ github.sha }}"
          path: |
            e2e-tests/shots
            e2e-tests/logs

  build:
    needs:
      - backend_tests
      - frontend_tests
      - e2e_tests

    runs-on: "ubuntu-latest"

    steps:
      - uses: "actions/checkout@v2"

      - name: "Setup Python"
        uses: "actions/setup-python@v2"
        with:
          python-version: 3.9

      - name: "Setup Node"
        uses: "actions/setup-node@v2"
        with:
          node-version: 16

      - name: "Build and create archive"
        env:
          PRESTIGE_FRONTEND_ROLLBAR_TOKEN: ${{ secrets.PRESTIGE_FRONTEND_ROLLBAR_TOKEN }}
        run: |
          make build-all

      - name: "Upload to S3"
        if: |
          success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-2
          AWS_DEFAULT_OUTPUT: json
        run: |
          make upload-package
